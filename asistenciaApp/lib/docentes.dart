import 'dart:async';
import 'dart:convert';
import 'dart:typed_data';
import 'package:app/clases/sesion.dart';
import 'package:flutter/material.dart';
import 'package:app/clases/cDocente.dart';
import 'package:app/modelos/Mdocente.dart';
import 'package:app/clases/vistas.dart';
import 'package:flutter/services.dart';
import 'package:webview_flutter/webview_flutter.dart';
import 'dart:io' show File, Platform;
import 'package:flutter/foundation.dart' show kIsWeb;
import 'modelos/Musuario.dart';
import 'package:image_picker/image_picker.dart';

class alumnos extends StatefulWidget {
  final Musuario usuario;

  const alumnos({super.key, required this.usuario});

  @override
  State<alumnos> createState() => _alumnosState();
}

class _alumnosState extends State<alumnos> {
  TextEditingController cBusq = TextEditingController();
  TextEditingController txtDni = TextEditingController();
  TextEditingController txtNomb = TextEditingController();
  TextEditingController txtApepa = TextEditingController();
  TextEditingController txtApema = TextEditingController();
  late Future<List<Mdocente>> ldocentes;
  cDocente metodos = new cDocente();
  sesion ses = sesion();
  late XFile fDocente;
  String tempFoto =
      "";
  ImagePicker picker = ImagePicker();
  late Uint8List imgDoc;
  bool elegido = false;

  @override
  void initState() {
    if (kIsWeb) {
    } else {
      if (Platform.isAndroid) {
        WebView.platform = SurfaceAndroidWebView();
      } else if (Platform.isIOS) {
        // iOS-specific code
      }
    }
    cBusq = TextEditingController();
    super.initState();
    ldocentes = metodos.getDocentes("");
  }

  @override
  Widget build(BuildContext context) {
    Vistas componentes = new Vistas("DOCENTES", context, widget.usuario);
    return Scaffold(
        drawer: componentes.menu("admin"),
        appBar: AppBar(title: Text(componentes.titulopage)),
        body: Center(
          child: Column(
            children: <Widget>[pantalla(context)],
          ),
        ),
        floatingActionButton: FloatingActionButton(
          onPressed: () => setState(() {
            this.elegido=false;
            regDocente();
          }),
          tooltip: 'Registro de Docentes',
          child: const Icon(Icons.add),
        ));
  }

  Widget pantalla(context) {
    return Column(
      children: <Widget>[
        Container(
          margin: const EdgeInsets.all(6),
          child: const Text(
            "DOCENTES REGISTRADOS",
            style: TextStyle(fontWeight: FontWeight.bold, fontSize: 20),
          ),
        ),
        Row(
            mainAxisAlignment: MainAxisAlignment.start,
            crossAxisAlignment: CrossAxisAlignment.start,
            mainAxisSize: MainAxisSize.max,
            children: <Widget>[
              Container(
                  margin: const EdgeInsets.all(4),
                  width: MediaQuery.of(context).size.width * 0.7,
                  child: txtBusq()),
              Container(
                  margin: const EdgeInsets.all(4),
                  width: MediaQuery.of(context).size.width * 0.25,
                  child: btnBuscar())
            ]),
        Center(
            child: Container(
          margin: const EdgeInsets.all(10),
          child: const Text("Lista de Docentes:"),
        )),
        SizedBox(
            height: MediaQuery.of(context).size.height * 0.66,
            child: listaDatos(context)),
      ],
    );
  }

  Widget txtBusq() {
    return Container(
        child: TextField(
            //obscureText: true,
            decoration: InputDecoration(
              hintText: "Buscar Docente",
              //filled: true,
            ),
            controller: cBusq));
  }

  Widget btnBuscar() {
    return ClipRRect(
      borderRadius: BorderRadius.circular(5),
      child: Stack(
        children: <Widget>[
          Positioned.fill(
            child: Container(
              decoration: const BoxDecoration(
                gradient: LinearGradient(
                  colors: <Color>[
                    Color(0xFF0D47A1),
                    Color(0xFF1976D2),
                    Color(0xFF42A5F5),
                  ],
                ),
              ),
            ),
          ),
          TextButton(
              style: TextButton.styleFrom(
                foregroundColor: Colors.white,
                padding: const EdgeInsets.all(16.0),
                textStyle: const TextStyle(fontSize: 20),
              ),
              onPressed: () => setState(() {
                    ldocentes = metodos.getDocentes(cBusq.text);
                  }),
              child: const Text("Buscar",
                  style: TextStyle(
                      color: Colors.white,
                      fontSize: 15.0,
                      fontWeight: FontWeight.bold))),
        ],
      ),
    );
  }

  Widget listaDatos(context) {
    return FutureBuilder(
        future: ldocentes,
        builder: (context, snapshop) {
          if (snapshop.hasData) {
            // print(snapshop.data);
            // List<Calumno>? datos= snapshop.data;
            return ListView(
              scrollDirection: Axis.vertical,
              shrinkWrap: true,
              children: elementos(snapshop.data),
            );
          } else if (snapshop.hasError) {
            print(snapshop.error);
          }
          return const Center(child: CircularProgressIndicator());
        });
  }

  List<Widget> elementos(List<Mdocente>? data) {
    List<Widget> element = [];
    int i = 0;
    for (var ele in data!) {
      i++;
      if (ele.foto.length < 5) {
        ele.foto = tempFoto;
      }
      Uint8List img;
      img = Base64Decoder().convert(ele.foto);

      // print(i.toString() + ele.toString());
      element.add(Card(
          child: Row(
        mainAxisAlignment: MainAxisAlignment.start,
        crossAxisAlignment: CrossAxisAlignment.start,
        mainAxisSize: MainAxisSize.max,
        children: [
          Container(
              margin: const EdgeInsets.all(4),
              width: MediaQuery.of(context).size.width * 0.20,
              child: GestureDetector(
                  onTap: () {
                    setState(() {
                      // print("por que me tocas papi"+ele.dni);
                      detallerAlu(ele);
                    });
                  },
                  child: Image.memory(img))),
          Container(
              margin: const EdgeInsets.all(4),
              width: MediaQuery.of(context).size.width * 0.40,
              child: Column(
                children: [
                  Padding(
                    padding: const EdgeInsets.all(3),
                    child: Text(ele.dniDoc),
                  ),
                  Padding(
                    padding: const EdgeInsets.all(3),
                    child: Text(ele.nomDoc),
                  ),
                  Padding(
                    padding: const EdgeInsets.all(3),
                    child: Text(ele.apepaDoc),
                  ),
                  Padding(
                    padding: const EdgeInsets.all(3),
                    child: Text(ele.apemaDoc),
                  ),
                  const Padding(
                    padding: EdgeInsets.all(3),
                  )
                ],
              )),
          Container(
              margin: const EdgeInsets.all(4),
              width: MediaQuery.of(context).size.width * 0.30,
              child: Column(children: [
                Container(margin: EdgeInsets.all(2), child: btnDatos(ele)),
                Container(margin: EdgeInsets.all(2), child: btnHorarios(ele))
              ]))
        ],
      )));
    }
    return element;
  }

  Widget btnDatos(Mdocente ele) {
    return ClipRRect(
      borderRadius: BorderRadius.circular(5),
      child: Stack(
        children: <Widget>[
          Positioned.fill(
            child: Container(
              decoration: const BoxDecoration(
                gradient: LinearGradient(
                  colors: <Color>[
                    Color.fromRGBO(76, 173, 240, 1.0),
                    Color.fromRGBO(76, 173, 240, 1.0),
                  ],
                ),
              ),
            ),
          ),
          TextButton(
              style: TextButton.styleFrom(
                foregroundColor: Colors.white,
                padding: const EdgeInsets.all(16.0),
                textStyle: const TextStyle(fontSize: 20),
              ),
              onPressed: () {
                // Navigator.push(
                //      context, MaterialPageRoute(builder: (context) => pdfAlu()));
                detallerAlu(ele);
              },
              child: const Text("Ver Detalles",
                  style: TextStyle(
                      color: Colors.white,
                      fontSize: 10.0,
                      fontWeight: FontWeight.bold))),
        ],
      ),
    );
  }

  Widget btnHorarios(Mdocente ele) {
    return ClipRRect(
      borderRadius: BorderRadius.circular(5),
      child: Stack(
        children: <Widget>[
          Positioned.fill(
            child: Container(
              decoration: const BoxDecoration(
                gradient: LinearGradient(
                  colors: <Color>[
                    Color.fromRGBO(76, 0, 240, 1.0),
                    Color.fromRGBO(76, 0, 240, 1.0),
                  ],
                ),
              ),
            ),
          ),
          TextButton(
              style: TextButton.styleFrom(
                foregroundColor: Colors.white,
                padding: const EdgeInsets.all(16.0),
                textStyle: const TextStyle(fontSize: 20),
              ),
              onPressed: () {
                // Navigator.push(
                //      context, MaterialPageRoute(builder: (context) => pdfAlu()));
                horarioDoc(ele);
              },
              child: const Text("Ver Horario",
                  style: TextStyle(
                      color: Colors.white,
                      fontSize: 10.0,
                      fontWeight: FontWeight.bold))),
        ],
      ),
    );
  }

  Widget btnCerrarDet() {
    return ClipRRect(
      borderRadius: BorderRadius.circular(5),
      child: Stack(
        children: <Widget>[
          Positioned.fill(
            child: Container(
              decoration: const BoxDecoration(
                gradient: LinearGradient(
                  colors: <Color>[
                    Color.fromRGBO(76, 0, 240, 1.0),
                    Color.fromRGBO(76, 0, 240, 1.0),
                  ],
                ),
              ),
            ),
          ),
          TextButton(
              style: TextButton.styleFrom(
                foregroundColor: Colors.white,
                padding: const EdgeInsets.all(16.0),
                textStyle: const TextStyle(fontSize: 20),
              ),
              onPressed: () {
                // Navigator.push(
                //      context, MaterialPageRoute(builder: (context) => pdfAlu()));
              },
              child: const Text("Ver Horario",
                  style: TextStyle(
                      color: Colors.white,
                      fontSize: 10.0,
                      fontWeight: FontWeight.bold))),
        ],
      ),
    );
  }

  void detallerAlu(Mdocente ele) {
    var height = MediaQuery.of(context).size.height;
    var width = MediaQuery.of(context).size.width;
    showDialog(
        context: context,
        builder: (buildcontext) {
          if (ele.foto.length < 5) {
            ele.foto = tempFoto;
          }
          Uint8List img;
          img = Base64Decoder().convert(ele.foto);
          return AlertDialog(
            insetPadding: EdgeInsets.all(0),
            title: Text(ele.dniDoc + "-" + ele.nomDoc),
            content: Image.memory(img),
            actions: <Widget>[
              TextButton(
                child: const Text(
                  "CERRAR",
                  style: TextStyle(color: Colors.black),
                ),
                onPressed: () {
                  Navigator.of(context).pop();
                },
              )
            ],
          );
        });
  }

  void horarioDoc(Mdocente ele) {
    showDialog(
        context: context,
        builder: (buildcontext) {
          if (ele.foto.length < 5) {
            ele.foto = tempFoto;
          }
          Uint8List img;
          img = Base64Decoder().convert(ele.foto);
          return AlertDialog(
            insetPadding: EdgeInsets.all(0),
            title: Column(children: [
              Row(
                  mainAxisAlignment: MainAxisAlignment.start,
                  crossAxisAlignment: CrossAxisAlignment.start,
                  mainAxisSize: MainAxisSize.max,
                  children: <Widget>[
                    Container(
                        margin: const EdgeInsets.all(4),
                        width: MediaQuery.of(context).size.width * 0.5,
                        child: Text(ele.dniDoc + "-" + ele.nomDoc,
                            style: TextStyle(
                                fontWeight: FontWeight.bold, fontSize: 14))),
                    Container(
                        margin: const EdgeInsets.all(2),
                        width: MediaQuery.of(context).size.width * 0.25,
                        child: Image.memory(img, width: 80, height: 80))
                  ]),
              Text("HORARIO DEL DOCENTE",
                  style: TextStyle(fontWeight: FontWeight.bold, fontSize: 20))
            ]),
            content: horas(),
            actions: <Widget>[
              TextButton(
                child: const Text(
                  "CERRAR",
                  style: TextStyle(color: Colors.black),
                ),
                onPressed: () {
                  Navigator.of(context).pop();
                },
              )
            ],
          );
        });
  }

  Widget horas() {
    List<String> dias = [
      "Lunes",
      "Martes",
      "Miercoles",
      "Jueves",
      "Viernes",
      "Sabado",
      "Domingo"
    ];
    return Container(
        width: double.minPositive,
        height: 300,
        // height: MediaQuery.of(context).size.height * 0.40,
        // constraints: BoxConstraints(minWidth: 230.0, minHeight: 25.0),
        child: ListView.builder(
          shrinkWrap: true,
          scrollDirection: Axis.vertical,
          itemCount: dias.length,
          itemBuilder: (context, pos) {
            return elementoHorario(dias[pos], "8:00 AM a 10:00 AM");
          },
        ));
  }

  Widget elementoHorario(dia, horas) {
    return Card(
        shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(10)),
        margin: EdgeInsets.all(0),
        elevation: 1,
        child: Container(
          margin: const EdgeInsets.all(4),
          width: MediaQuery.of(context).size.width * 0.60,
          child: Column(
            children: <Widget>[
              ListTile(
                contentPadding: EdgeInsets.fromLTRB(10, 10, 10, 0),
                title: Text(dia),
                subtitle: Text(horas),
                leading: Icon(Icons.timelapse),
              )
            ],
          ),
        ));
  }

  void regDocente() {
    // elegido = false;
    showDialog(
        context: context,
        builder: (buildcontext) {
          return AlertDialog(
            insetPadding: EdgeInsets.all(0),
            title: Text("Registrar Docente"),
            content: Container(width: 350, child: regDoc()),
            actions: <Widget>[
              TextButton(
                child: const Text(
                  "Registrar",
                  style: TextStyle(color: Colors.blue),
                ),
                onPressed: () {
                  // Navigator.of(context).pop();
                  setState(() {
                    // elegido=true;
                  });
                },
              ),
              TextButton(
                child: const Text(
                  "Cerrar",
                  style: TextStyle(color: Colors.black),
                ),
                onPressed: () {
                  Navigator.of(context).pop();
                },
              )
            ],
          );
        });
  }

  Widget regDoc() {
    imgDoc = Base64Decoder().convert(tempFoto);
    return Column(
      children: [
        Container(
          child: Column(
            children: [
              Text("Dni:", textAlign: TextAlign.right),
              TextField(
                  decoration:
                      InputDecoration(hintText: "Escribe DNI del Docente"))
            ],
          ),
        ),
        Container(
          margin: EdgeInsets.all(5),
          child: Column(
            children: [
              Text("Nombres:", textAlign: TextAlign.right),
              TextField(
                  decoration:
                      InputDecoration(hintText: "Escribe Nombres del Docente"))
            ],
          ),
        ),
        Container(
          margin: EdgeInsets.all(5),
          child: Column(
            children: [
              Text("Apellido Paterno:", textAlign: TextAlign.right),
              TextField(
                  decoration: InputDecoration(
                      hintText: "Escribe Apellido Paterno del Docente"))
            ],
          ),
        ),
        Container(
          margin: EdgeInsets.all(5),
          child: Column(
            children: [
              Text("Apellido Materno:", textAlign: TextAlign.right),
              TextField(
                  decoration: InputDecoration(
                      hintText: "Escribe Apellido Materno del Docente"))
            ],
          ),
        ),
        Container(
          margin: EdgeInsets.all(5),
          child: Column(
            children: [
              Text("Elige Fotografia:", textAlign: TextAlign.right),
              Row(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [btnFoto(), btnGaleria()])
            ],
          ),
        ),
        Container(margin: EdgeInsets.all(5), child: foto())
      ],
    );
  }

  Widget btnFoto() {
    return ClipRRect(
      borderRadius: BorderRadius.circular(5),
      child: Stack(
        children: <Widget>[
          Positioned.fill(
            child: Container(
              margin: EdgeInsets.all(5),
              decoration: const BoxDecoration(
                gradient: LinearGradient(
                  colors: <Color>[
                    Color.fromRGBO(76, 0, 240, 1.0),
                    Color.fromRGBO(76, 0, 240, 1.0),
                  ],
                ),
              ),
            ),
          ),
          TextButton(
              style: TextButton.styleFrom(
                foregroundColor: Colors.white,
                padding: const EdgeInsets.all(16.0),
                textStyle: const TextStyle(fontSize: 20),
              ),
              onPressed: () {
                _getImg("camara");
              },
              child: const Text("Tomar Foto",
                  style: TextStyle(
                      color: Colors.white,
                      fontSize: 10.0,
                      fontWeight: FontWeight.bold))),
        ],
      ),
    );
  }

  Widget btnGaleria() {
    return ClipRRect(
      borderRadius: BorderRadius.circular(5),
      child: Stack(
        children: <Widget>[
          Positioned.fill(
            child: Container(
              decoration: const BoxDecoration(
                gradient: LinearGradient(
                  colors: <Color>[
                    Color.fromRGBO(76, 0, 240, 1.0),
                    Color.fromRGBO(76, 0, 240, 1.0),
                  ],
                ),
              ),
            ),
          ),
          TextButton(
              style: TextButton.styleFrom(
                foregroundColor: Colors.white,
                padding: const EdgeInsets.all(16.0),
                textStyle: const TextStyle(fontSize: 20),
              ),
              onPressed: () {
                _getImg("galeria");
              },
              child: const Text("Elegir Foto de Galeria",
                  style: TextStyle(
                      color: Colors.white,
                      fontSize: 10.0,
                      fontWeight: FontWeight.bold))),
        ],
      ),
    );
  }

  _getImg(String modo) async {
    late XFile pickedFile;
    try {
      if (modo == "galeria") {
        pickedFile =
            await picker.pickImage(source: ImageSource.gallery) as XFile;
      } else {
        pickedFile =
            await picker.pickImage(source: ImageSource.camera) as XFile;
      }
      if (pickedFile != null) {
        setState(() {
          this.fDocente = pickedFile;
          String img64 = base64Encode(File(fDocente.path).readAsBytesSync());
          // print(img64);
          this.imgDoc = Base64Decoder().convert(img64);
          elegido = true;
          Navigator.of(context).pop();
          regDocente();
        });
      }
    } on PlatformException catch (e) {
      print('Failed to pick image: $e');
    }
    // foto();
//print(imgDoc);
  }

  Widget foto() {
    if (this.elegido == true) {
      if (kIsWeb) {
        return Image.memory(this.imgDoc,
            width: 100, height: 100, fit: BoxFit.cover);
      } else {
        return Image.file(File(this.fDocente.path),
            width: 100, height: 100, fit: BoxFit.cover);
      }
    } else {
      return Image.memory(this.imgDoc,
          width: 100, height: 100, fit: BoxFit.cover);
    }
  }
}
